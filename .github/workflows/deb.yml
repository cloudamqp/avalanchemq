name: Deb
on: [push]

jobs:
  build_docs:
    name: Build HTTP API documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Spectral and ReDoc CLI
        run: sudo npm install -g @stoplight/spectral redoc-cli

      - name: Validate OpenAPI documents for HTTP API
        run: spectral lint openapi/openapi.yaml

      - name: Build the documentation
        run: |
          redoc-cli bundle openapi/openapi.yaml
          mv redoc-static.html index.html

      - name: Upload the documentation
        uses: actions/upload-artifact@v2
        with:
          name: index.html
          path: index.html

  build_deb:
    name: Build
    needs: build_docs
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y libsystemd-dev dpkg fakeroot help2man lintian build-essential gcc pkg-config git tzdata libpcre3-dev libevent-dev libyaml-dev libgmp-dev libssl-dev libxml2-dev

      - name: Install Crystal
        run: |
          wget https://crystal-lang.org/install.sh
          chmod +x install.sh
          sudo ./install.sh --crystal=0.35.1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download the HTTP API documentation
        uses: actions/download-artifact@v2
        with:
          name: index.html
          path: static/docs/

      - name: Get Ubuntu release name
        run: echo "CODENAME=$(lsb_release -cs)" >> $GITHUB_ENV

      - name: Get version
        run: echo "VERSION=$(git describe --tags | cut -c2-)" >> $GITHUB_ENV

      - name: Get arch
        run: echo "ARCH=$(dpkg --print-architecture)" >> $GITHUB_ENV

      - name: Build deb package
        run: build/deb ${{ env.VERSION }} 1

      - name: Test start avalanchemq
        run: bin/avalanchemq --version

      - name: Test start avalanchemqctl
        run: bin/avalanchemqctl --version

      - name: Test start avalanchemqperf
        run: bin/avalanchemqperf --version

      - name: Upload github artifact
        uses: actions/upload-artifact@v2
        with:
          path: builds/debian/${{ env.CODENAME }}/avalanchemq_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
          name: avalanchemq_${{ env.VERSION }}-1-${{ env.CODENAME }}_${{ env.ARCH }}.deb

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install packagecloud cli
        run: gem install package_cloud

      - name: Upload to packagecloud head repo
        run: package_cloud push cloudamqp/avalanchemq-head/ubuntu/${{ env.CODENAME }} builds/debian/${{ env.CODENAME }}/avalanchemq_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: github.ref == 'refs/heads/master'

      - name: Check if Git tag exists
        run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"

      - name: Upload to packagecloud release repo
        run: package_cloud push cloudamqp/avalanchemq/ubuntu/${{ env.CODENAME }} builds/debian/${{ env.CODENAME }}/avalanchemq_${{ env.VERSION }}-1_${{ env.ARCH }}.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: env.HEAD_TAG != ''
